# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui_qgswcsclient2.ui'
#
# Created: Wed Sep  3 18:00:23 2014
#      by: PyQt4 UI code generator 4.10.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_QgsWcsClient2(object):
    def setupUi(self, QgsWcsClient2):
        QgsWcsClient2.setObjectName(_fromUtf8("QgsWcsClient2"))
        QgsWcsClient2.resize(799, 676)
        self.tabWidget_EOWcsClient2 = QtGui.QTabWidget(QgsWcsClient2)
        self.tabWidget_EOWcsClient2.setEnabled(True)
        self.tabWidget_EOWcsClient2.setGeometry(QtCore.QRect(10, 0, 781, 661))
        self.tabWidget_EOWcsClient2.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        self.tabWidget_EOWcsClient2.setObjectName(_fromUtf8("tabWidget_EOWcsClient2"))
        self.tab_Serv = QtGui.QWidget()
        self.tab_Serv.setObjectName(_fromUtf8("tab_Serv"))
        self.GroupBox_9 = QtGui.QGroupBox(self.tab_Serv)
        self.GroupBox_9.setGeometry(QtCore.QRect(7, 13, 762, 121))
        self.GroupBox_9.setObjectName(_fromUtf8("GroupBox_9"))
        self._6 = QtGui.QGridLayout(self.GroupBox_9)
        self._6.setMargin(9)
        self._6.setSpacing(6)
        self._6.setObjectName(_fromUtf8("_6"))
        self.btnDelete_Serv = QtGui.QPushButton(self.GroupBox_9)
        self.btnDelete_Serv.setEnabled(False)
        self.btnDelete_Serv.setAutoDefault(False)
        self.btnDelete_Serv.setObjectName(_fromUtf8("btnDelete_Serv"))
        self._6.addWidget(self.btnDelete_Serv, 4, 3, 1, 1)
        spacerItem = QtGui.QSpacerItem(258, 27, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self._6.addItem(spacerItem, 4, 4, 1, 1)
        self.btnEdit_Serv = QtGui.QPushButton(self.GroupBox_9)
        self.btnEdit_Serv.setEnabled(False)
        self.btnEdit_Serv.setAutoDefault(False)
        self.btnEdit_Serv.setObjectName(_fromUtf8("btnEdit_Serv"))
        self._6.addWidget(self.btnEdit_Serv, 4, 2, 1, 1)
        self.btnNew_Serv = QtGui.QPushButton(self.GroupBox_9)
        self.btnNew_Serv.setAutoDefault(False)
        self.btnNew_Serv.setObjectName(_fromUtf8("btnNew_Serv"))
        self._6.addWidget(self.btnNew_Serv, 4, 1, 1, 1)
        self.cmbConnections_Serv = QtGui.QComboBox(self.GroupBox_9)
        self.cmbConnections_Serv.setObjectName(_fromUtf8("cmbConnections_Serv"))
        self._6.addWidget(self.cmbConnections_Serv, 1, 0, 1, 5)
        self.btnConnectServer_Serv = QtGui.QPushButton(self.GroupBox_9)
        self.btnConnectServer_Serv.setEnabled(True)
        self.btnConnectServer_Serv.setObjectName(_fromUtf8("btnConnectServer_Serv"))
        self._6.addWidget(self.btnConnectServer_Serv, 4, 0, 1, 1)
        self.label_6 = QtGui.QLabel(self.GroupBox_9)
        self.label_6.setObjectName(_fromUtf8("label_6"))
        self._6.addWidget(self.label_6, 0, 0, 1, 1)
        self.textBrowser_Serv = QtGui.QTextBrowser(self.tab_Serv)
        self.textBrowser_Serv.setGeometry(QtCore.QRect(20, 166, 731, 321))
        self.textBrowser_Serv.setObjectName(_fromUtf8("textBrowser_Serv"))
        self.btnClose_Serv = QtGui.QPushButton(self.tab_Serv)
        self.btnClose_Serv.setGeometry(QtCore.QRect(650, 585, 98, 27))
        self.btnClose_Serv.setObjectName(_fromUtf8("btnClose_Serv"))
        self.label_2 = QtGui.QLabel(self.tab_Serv)
        self.label_2.setGeometry(QtCore.QRect(24, 143, 321, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName(_fromUtf8("label_2"))
        self.groupBox = QtGui.QGroupBox(self.tab_Serv)
        self.groupBox.setGeometry(QtCore.QRect(20, 511, 741, 81))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName(_fromUtf8("groupBox"))
        self.toolButton_Serv_OutputLoc = QtGui.QToolButton(self.groupBox)
        self.toolButton_Serv_OutputLoc.setGeometry(QtCore.QRect(650, 35, 23, 25))
        self.toolButton_Serv_OutputLoc.setObjectName(_fromUtf8("toolButton_Serv_OutputLoc"))
        self.lineEdit_Serv_OutputLoc = QtGui.QLineEdit(self.groupBox)
        self.lineEdit_Serv_OutputLoc.setGeometry(QtCore.QRect(0, 35, 641, 27))
        self.lineEdit_Serv_OutputLoc.setObjectName(_fromUtf8("lineEdit_Serv_OutputLoc"))
        self.tabWidget_EOWcsClient2.addTab(self.tab_Serv, _fromUtf8(""))
        self.tab_GCa = QtGui.QWidget()
        self.tab_GCa.setEnabled(False)
        self.tab_GCa.setMouseTracking(False)
        self.tab_GCa.setFocusPolicy(QtCore.Qt.NoFocus)
        self.tab_GCa.setObjectName(_fromUtf8("tab_GCa"))
        self.GroupBox_4 = QtGui.QGroupBox(self.tab_GCa)
        self.GroupBox_4.setGeometry(QtCore.QRect(9, 10, 741, 131))
        self.GroupBox_4.setObjectName(_fromUtf8("GroupBox_4"))
        self.gridLayoutWidget_3 = QtGui.QWidget(self.GroupBox_4)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(10, 50, 651, 81))
        self.gridLayoutWidget_3.setObjectName(_fromUtf8("gridLayoutWidget_3"))
        self.gridLayout_5 = QtGui.QGridLayout(self.gridLayoutWidget_3)
        self.gridLayout_5.setMargin(0)
        self.gridLayout_5.setObjectName(_fromUtf8("gridLayout_5"))
        self.checkBox_GCaDaSerSum = QtGui.QCheckBox(self.gridLayoutWidget_3)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_GCaDaSerSum.sizePolicy().hasHeightForWidth())
        self.checkBox_GCaDaSerSum.setSizePolicy(sizePolicy)
        self.checkBox_GCaDaSerSum.setObjectName(_fromUtf8("checkBox_GCaDaSerSum"))
        self.gridLayout_5.addWidget(self.checkBox_GCaDaSerSum, 1, 0, 1, 1)
        self.checkBox_GCaCovSum = QtGui.QCheckBox(self.gridLayoutWidget_3)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_GCaCovSum.sizePolicy().hasHeightForWidth())
        self.checkBox_GCaCovSum.setSizePolicy(sizePolicy)
        self.checkBox_GCaCovSum.setObjectName(_fromUtf8("checkBox_GCaCovSum"))
        self.gridLayout_5.addWidget(self.checkBox_GCaCovSum, 2, 0, 1, 1)
        self.checkBox_GCaServProv = QtGui.QCheckBox(self.gridLayoutWidget_3)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_GCaServProv.sizePolicy().hasHeightForWidth())
        self.checkBox_GCaServProv.setSizePolicy(sizePolicy)
        self.checkBox_GCaServProv.setObjectName(_fromUtf8("checkBox_GCaServProv"))
        self.gridLayout_5.addWidget(self.checkBox_GCaServProv, 1, 1, 1, 1)
        self.checkBox_GCaAll = QtGui.QCheckBox(self.gridLayoutWidget_3)
        self.checkBox_GCaAll.setObjectName(_fromUtf8("checkBox_GCaAll"))
        self.gridLayout_5.addWidget(self.checkBox_GCaAll, 0, 0, 1, 1)
        self.checkBox_GCaServId = QtGui.QCheckBox(self.gridLayoutWidget_3)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_GCaServId.sizePolicy().hasHeightForWidth())
        self.checkBox_GCaServId.setSizePolicy(sizePolicy)
        self.checkBox_GCaServId.setObjectName(_fromUtf8("checkBox_GCaServId"))
        self.gridLayout_5.addWidget(self.checkBox_GCaServId, 0, 1, 1, 1)
        self.checkBox_GCaLang = QtGui.QCheckBox(self.gridLayoutWidget_3)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_GCaLang.sizePolicy().hasHeightForWidth())
        self.checkBox_GCaLang.setSizePolicy(sizePolicy)
        self.checkBox_GCaLang.setObjectName(_fromUtf8("checkBox_GCaLang"))
        self.gridLayout_5.addWidget(self.checkBox_GCaLang, 2, 2, 1, 1)
        self.checkBox_GCaCont = QtGui.QCheckBox(self.gridLayoutWidget_3)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_GCaCont.sizePolicy().hasHeightForWidth())
        self.checkBox_GCaCont.setSizePolicy(sizePolicy)
        self.checkBox_GCaCont.setObjectName(_fromUtf8("checkBox_GCaCont"))
        self.gridLayout_5.addWidget(self.checkBox_GCaCont, 1, 2, 1, 1)
        self.checkBox_GCaOpMeta = QtGui.QCheckBox(self.gridLayoutWidget_3)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_GCaOpMeta.sizePolicy().hasHeightForWidth())
        self.checkBox_GCaOpMeta.setSizePolicy(sizePolicy)
        self.checkBox_GCaOpMeta.setObjectName(_fromUtf8("checkBox_GCaOpMeta"))
        self.gridLayout_5.addWidget(self.checkBox_GCaOpMeta, 0, 2, 1, 1)
        self.checkBox_GCaServMeta = QtGui.QCheckBox(self.gridLayoutWidget_3)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_GCaServMeta.sizePolicy().hasHeightForWidth())
        self.checkBox_GCaServMeta.setSizePolicy(sizePolicy)
        self.checkBox_GCaServMeta.setObjectName(_fromUtf8("checkBox_GCaServMeta"))
        self.gridLayout_5.addWidget(self.checkBox_GCaServMeta, 2, 1, 1, 1)
        self.label = QtGui.QLabel(self.GroupBox_4)
        self.label.setGeometry(QtCore.QRect(11, 25, 651, 17))
        self.label.setObjectName(_fromUtf8("label"))
        self.GroupBox_5 = QtGui.QGroupBox(self.tab_GCa)
        self.GroupBox_5.setGeometry(QtCore.QRect(1, 160, 431, 51))
        self.GroupBox_5.setTitle(_fromUtf8(""))
        self.GroupBox_5.setObjectName(_fromUtf8("GroupBox_5"))
        self.label_GCaInfo1 = QtGui.QLabel(self.GroupBox_5)
        self.label_GCaInfo1.setGeometry(QtCore.QRect(10, 6, 241, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_GCaInfo1.setFont(font)
        self.label_GCaInfo1.setObjectName(_fromUtf8("label_GCaInfo1"))
        self.checkBox_GCa_ActiveDate = QtGui.QCheckBox(self.GroupBox_5)
        self.checkBox_GCa_ActiveDate.setEnabled(False)
        self.checkBox_GCa_ActiveDate.setGeometry(QtCore.QRect(246, 10, 31, 22))
        self.checkBox_GCa_ActiveDate.setText(_fromUtf8(""))
        self.checkBox_GCa_ActiveDate.setObjectName(_fromUtf8("checkBox_GCa_ActiveDate"))
        self.pushButton_GCa = QtGui.QPushButton(self.tab_GCa)
        self.pushButton_GCa.setGeometry(QtCore.QRect(597, 568, 171, 41))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_GCa.setFont(font)
        self.pushButton_GCa.setObjectName(_fromUtf8("pushButton_GCa"))
        self.btnClose_GCa = QtGui.QPushButton(self.tab_GCa)
        self.btnClose_GCa.setGeometry(QtCore.QRect(480, 576, 98, 27))
        self.btnClose_GCa.setObjectName(_fromUtf8("btnClose_GCa"))
        self.treeWidget_GCa = QtGui.QTreeWidget(self.tab_GCa)
        self.treeWidget_GCa.setGeometry(QtCore.QRect(10, 240, 762, 321))
        self.treeWidget_GCa.setEditTriggers(QtGui.QAbstractItemView.DoubleClicked)
        self.treeWidget_GCa.setAlternatingRowColors(True)
        self.treeWidget_GCa.setSelectionMode(QtGui.QAbstractItemView.MultiSelection)
        self.treeWidget_GCa.setSelectionBehavior(QtGui.QAbstractItemView.SelectRows)
        self.treeWidget_GCa.setAutoExpandDelay(-1)
        self.treeWidget_GCa.setColumnCount(4)
        self.treeWidget_GCa.setObjectName(_fromUtf8("treeWidget_GCa"))
        self.treeWidget_GCa.header().setDefaultSectionSize(200)
        self.treeWidget_GCa.header().setStretchLastSection(True)
        self.dateEdit_GCaDocUpdate = QtGui.QDateEdit(self.tab_GCa)
        self.dateEdit_GCaDocUpdate.setEnabled(False)
        self.dateEdit_GCaDocUpdate.setGeometry(QtCore.QRect(282, 168, 131, 27))
        self.dateEdit_GCaDocUpdate.setDate(QtCore.QDate(2014, 1, 1))
        self.dateEdit_GCaDocUpdate.setMinimumDateTime(QtCore.QDateTime(QtCore.QDate(1900, 1, 1), QtCore.QTime(0, 0, 0)))
        self.dateEdit_GCaDocUpdate.setMaximumTime(QtCore.QTime(23, 59, 59))
        self.dateEdit_GCaDocUpdate.setCurrentSection(QtGui.QDateTimeEdit.YearSection)
        self.dateEdit_GCaDocUpdate.setCalendarPopup(True)
        self.dateEdit_GCaDocUpdate.setObjectName(_fromUtf8("dateEdit_GCaDocUpdate"))
        self.label_3 = QtGui.QLabel(self.tab_GCa)
        self.label_3.setGeometry(QtCore.QRect(10, 215, 591, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName(_fromUtf8("label_3"))
        self.tabWidget_EOWcsClient2.addTab(self.tab_GCa, _fromUtf8(""))
        self.tab_DC = QtGui.QWidget()
        self.tab_DC.setEnabled(False)
        self.tab_DC.setObjectName(_fromUtf8("tab_DC"))
        self.treeWidget_DC = QtGui.QTreeWidget(self.tab_DC)
        self.treeWidget_DC.setGeometry(QtCore.QRect(10, 106, 762, 431))
        self.treeWidget_DC.setAlternatingRowColors(True)
        self.treeWidget_DC.setSelectionMode(QtGui.QAbstractItemView.SingleSelection)
        self.treeWidget_DC.setColumnCount(1)
        self.treeWidget_DC.setObjectName(_fromUtf8("treeWidget_DC"))
        self.label_DCInfo1 = QtGui.QLabel(self.tab_DC)
        self.label_DCInfo1.setGeometry(QtCore.QRect(10, 18, 331, 21))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_DCInfo1.setFont(font)
        self.label_DCInfo1.setObjectName(_fromUtf8("label_DCInfo1"))
        self.label_DCInfo2 = QtGui.QLabel(self.tab_DC)
        self.label_DCInfo2.setGeometry(QtCore.QRect(30, 43, 581, 16))
        self.label_DCInfo2.setObjectName(_fromUtf8("label_DCInfo2"))
        self.pushButton_DC = QtGui.QPushButton(self.tab_DC)
        self.pushButton_DC.setGeometry(QtCore.QRect(599, 565, 171, 41))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_DC.setFont(font)
        self.pushButton_DC.setObjectName(_fromUtf8("pushButton_DC"))
        self.btnClose_DC = QtGui.QPushButton(self.tab_DC)
        self.btnClose_DC.setGeometry(QtCore.QRect(484, 575, 98, 27))
        self.btnClose_DC.setObjectName(_fromUtf8("btnClose_DC"))
        self.label_4 = QtGui.QLabel(self.tab_DC)
        self.label_4.setGeometry(QtCore.QRect(10, 83, 701, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName(_fromUtf8("label_4"))
        self.tabWidget_EOWcsClient2.addTab(self.tab_DC, _fromUtf8(""))
        self.tab_DCS = QtGui.QWidget()
        self.tab_DCS.setEnabled(False)
        self.tab_DCS.setObjectName(_fromUtf8("tab_DCS"))
        self.pushButton_DCS = QtGui.QPushButton(self.tab_DCS)
        self.pushButton_DCS.setGeometry(QtCore.QRect(558, 568, 211, 41))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_DCS.setFont(font)
        self.pushButton_DCS.setObjectName(_fromUtf8("pushButton_DCS"))
        self.label_DCSInfo2 = QtGui.QLabel(self.tab_DCS)
        self.label_DCSInfo2.setGeometry(QtCore.QRect(29, 44, 721, 16))
        self.label_DCSInfo2.setObjectName(_fromUtf8("label_DCSInfo2"))
        self.label_DCSInfo1 = QtGui.QLabel(self.tab_DCS)
        self.label_DCSInfo1.setGeometry(QtCore.QRect(9, 19, 451, 21))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_DCSInfo1.setFont(font)
        self.label_DCSInfo1.setObjectName(_fromUtf8("label_DCSInfo1"))
        self.treeWidget_DCS = QtGui.QTreeWidget(self.tab_DCS)
        self.treeWidget_DCS.setGeometry(QtCore.QRect(10, 100, 762, 181))
        self.treeWidget_DCS.setColumnCount(3)
        self.treeWidget_DCS.setObjectName(_fromUtf8("treeWidget_DCS"))
        self.treeWidget_DCS.header().setDefaultSectionSize(200)
        self.btnClose_DCS = QtGui.QPushButton(self.tab_DCS)
        self.btnClose_DCS.setGeometry(QtCore.QRect(439, 575, 98, 27))
        self.btnClose_DCS.setObjectName(_fromUtf8("btnClose_DCS"))
        self.groupBox_11 = QtGui.QGroupBox(self.tab_DCS)
        self.groupBox_11.setGeometry(QtCore.QRect(12, 350, 481, 171))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_11.setFont(font)
        self.groupBox_11.setObjectName(_fromUtf8("groupBox_11"))
        self.lineEdit_DCSMinLon = QtGui.QLineEdit(self.groupBox_11)
        self.lineEdit_DCSMinLon.setGeometry(QtCore.QRect(81, 78, 146, 27))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_DCSMinLon.sizePolicy().hasHeightForWidth())
        self.lineEdit_DCSMinLon.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_DCSMinLon.setFont(font)
        self.lineEdit_DCSMinLon.setObjectName(_fromUtf8("lineEdit_DCSMinLon"))
        self.lineEdit_DCSMaxLon = QtGui.QLineEdit(self.groupBox_11)
        self.lineEdit_DCSMaxLon.setGeometry(QtCore.QRect(245, 78, 146, 27))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_DCSMaxLon.sizePolicy().hasHeightForWidth())
        self.lineEdit_DCSMaxLon.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_DCSMaxLon.setFont(font)
        self.lineEdit_DCSMaxLon.setObjectName(_fromUtf8("lineEdit_DCSMaxLon"))
        self.lineEdit_DCSMinLat = QtGui.QLineEdit(self.groupBox_11)
        self.lineEdit_DCSMinLat.setGeometry(QtCore.QRect(161, 111, 151, 27))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_DCSMinLat.sizePolicy().hasHeightForWidth())
        self.lineEdit_DCSMinLat.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_DCSMinLat.setFont(font)
        self.lineEdit_DCSMinLat.setObjectName(_fromUtf8("lineEdit_DCSMinLat"))
        self.label_DCSMaxLon = QtGui.QLabel(self.groupBox_11)
        self.label_DCSMaxLon.setGeometry(QtCore.QRect(396, 71, 71, 41))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_DCSMaxLon.sizePolicy().hasHeightForWidth())
        self.label_DCSMaxLon.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_DCSMaxLon.setFont(font)
        self.label_DCSMaxLon.setScaledContents(False)
        self.label_DCSMaxLon.setAlignment(QtCore.Qt.AlignCenter)
        self.label_DCSMaxLon.setObjectName(_fromUtf8("label_DCSMaxLon"))
        self.label_DCSMinLat = QtGui.QLabel(self.groupBox_11)
        self.label_DCSMinLat.setGeometry(QtCore.QRect(186, 144, 89, 17))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_DCSMinLat.sizePolicy().hasHeightForWidth())
        self.label_DCSMinLat.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_DCSMinLat.setFont(font)
        self.label_DCSMinLat.setObjectName(_fromUtf8("label_DCSMinLat"))
        self.lineEdit_DCSMaxLat = QtGui.QLineEdit(self.groupBox_11)
        self.lineEdit_DCSMaxLat.setGeometry(QtCore.QRect(161, 45, 151, 27))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_DCSMaxLat.sizePolicy().hasHeightForWidth())
        self.lineEdit_DCSMaxLat.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_DCSMaxLat.setFont(font)
        self.lineEdit_DCSMaxLat.setObjectName(_fromUtf8("lineEdit_DCSMaxLat"))
        self.label_DCSMinLon = QtGui.QLabel(self.groupBox_11)
        self.label_DCSMinLon.setGeometry(QtCore.QRect(1, 71, 81, 41))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_DCSMinLon.sizePolicy().hasHeightForWidth())
        self.label_DCSMinLon.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_DCSMinLon.setFont(font)
        self.label_DCSMinLon.setAlignment(QtCore.Qt.AlignCenter)
        self.label_DCSMinLon.setObjectName(_fromUtf8("label_DCSMinLon"))
        self.label_DCSMaxLat = QtGui.QLabel(self.groupBox_11)
        self.label_DCSMaxLat.setGeometry(QtCore.QRect(189, 22, 92, 17))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_DCSMaxLat.sizePolicy().hasHeightForWidth())
        self.label_DCSMaxLat.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_DCSMaxLat.setFont(font)
        self.label_DCSMaxLat.setObjectName(_fromUtf8("label_DCSMaxLat"))
        self.groupBox_12 = QtGui.QGroupBox(self.tab_DCS)
        self.groupBox_12.setGeometry(QtCore.QRect(20, 510, 391, 101))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_12.setFont(font)
        self.groupBox_12.setObjectName(_fromUtf8("groupBox_12"))
        self.dateTimeEdit_DCSBegin = QtGui.QDateTimeEdit(self.groupBox_12)
        self.dateTimeEdit_DCSBegin.setGeometry(QtCore.QRect(164, 32, 194, 27))
        self.dateTimeEdit_DCSBegin.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedKingdom))
        self.dateTimeEdit_DCSBegin.setDateTime(QtCore.QDateTime(QtCore.QDate(2013, 12, 31), QtCore.QTime(19, 0, 0)))
        self.dateTimeEdit_DCSBegin.setDate(QtCore.QDate(2013, 12, 31))
        self.dateTimeEdit_DCSBegin.setMinimumDateTime(QtCore.QDateTime(QtCore.QDate(1899, 12, 31), QtCore.QTime(19, 0, 0)))
        self.dateTimeEdit_DCSBegin.setMinimumTime(QtCore.QTime(19, 0, 0))
        self.dateTimeEdit_DCSBegin.setCalendarPopup(True)
        self.dateTimeEdit_DCSBegin.setTimeSpec(QtCore.Qt.UTC)
        self.dateTimeEdit_DCSBegin.setObjectName(_fromUtf8("dateTimeEdit_DCSBegin"))
        self.dateTimeEdit_DCSEnd = QtGui.QDateTimeEdit(self.groupBox_12)
        self.dateTimeEdit_DCSEnd.setGeometry(QtCore.QRect(164, 72, 194, 27))
        self.dateTimeEdit_DCSEnd.setDateTime(QtCore.QDateTime(QtCore.QDate(2014, 1, 1), QtCore.QTime(18, 59, 59)))
        self.dateTimeEdit_DCSEnd.setDate(QtCore.QDate(2014, 1, 1))
        self.dateTimeEdit_DCSEnd.setTime(QtCore.QTime(18, 59, 59))
        self.dateTimeEdit_DCSEnd.setMinimumDateTime(QtCore.QDateTime(QtCore.QDate(1899, 12, 31), QtCore.QTime(19, 0, 0)))
        self.dateTimeEdit_DCSEnd.setMaximumTime(QtCore.QTime(18, 59, 59))
        self.dateTimeEdit_DCSEnd.setCurrentSection(QtGui.QDateTimeEdit.YearSection)
        self.dateTimeEdit_DCSEnd.setCalendarPopup(True)
        self.dateTimeEdit_DCSEnd.setTimeSpec(QtCore.Qt.UTC)
        self.dateTimeEdit_DCSEnd.setObjectName(_fromUtf8("dateTimeEdit_DCSEnd"))
        self.label_DCSBegin = QtGui.QLabel(self.groupBox_12)
        self.label_DCSBegin.setGeometry(QtCore.QRect(54, 36, 111, 20))
        self.label_DCSBegin.setObjectName(_fromUtf8("label_DCSBegin"))
        self.label_DCSEnd = QtGui.QLabel(self.groupBox_12)
        self.label_DCSEnd.setGeometry(QtCore.QRect(54, 75, 111, 20))
        self.label_DCSEnd.setObjectName(_fromUtf8("label_DCSEnd"))
        self.checkBox_DCS_ActiveDate = QtGui.QCheckBox(self.groupBox_12)
        self.checkBox_DCS_ActiveDate.setEnabled(False)
        self.checkBox_DCS_ActiveDate.setGeometry(QtCore.QRect(12, 55, 31, 22))
        self.checkBox_DCS_ActiveDate.setText(_fromUtf8(""))
        self.checkBox_DCS_ActiveDate.setCheckable(True)
        self.checkBox_DCS_ActiveDate.setObjectName(_fromUtf8("checkBox_DCS_ActiveDate"))
        self.groupBox_13 = QtGui.QGroupBox(self.tab_DCS)
        self.groupBox_13.setGeometry(QtCore.QRect(566, 293, 181, 91))
        self.groupBox_13.setObjectName(_fromUtf8("groupBox_13"))
        self.verticalLayoutWidget_2 = QtGui.QWidget(self.groupBox_13)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(12, 24, 160, 61))
        self.verticalLayoutWidget_2.setObjectName(_fromUtf8("verticalLayoutWidget_2"))
        self.verticalLayout_2 = QtGui.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setMargin(0)
        self.verticalLayout_2.setObjectName(_fromUtf8("verticalLayout_2"))
        self.radioButton_ContOver = QtGui.QRadioButton(self.verticalLayoutWidget_2)
        self.radioButton_ContOver.setChecked(True)
        self.radioButton_ContOver.setAutoExclusive(True)
        self.radioButton_ContOver.setObjectName(_fromUtf8("radioButton_ContOver"))
        self.verticalLayout_2.addWidget(self.radioButton_ContOver)
        self.radioButton_ContCont = QtGui.QRadioButton(self.verticalLayoutWidget_2)
        self.radioButton_ContCont.setObjectName(_fromUtf8("radioButton_ContCont"))
        self.verticalLayout_2.addWidget(self.radioButton_ContCont)
        self.groupBox_14 = QtGui.QGroupBox(self.tab_DCS)
        self.groupBox_14.setGeometry(QtCore.QRect(568, 390, 191, 71))
        self.groupBox_14.setObjectName(_fromUtf8("groupBox_14"))
        self.spinBox_DCSCount = QtGui.QSpinBox(self.groupBox_14)
        self.spinBox_DCSCount.setEnabled(False)
        self.spinBox_DCSCount.setGeometry(QtCore.QRect(55, 30, 101, 27))
        self.spinBox_DCSCount.setMinimum(1)
        self.spinBox_DCSCount.setMaximum(9999)
        self.spinBox_DCSCount.setProperty("value", 10)
        self.spinBox_DCSCount.setObjectName(_fromUtf8("spinBox_DCSCount"))
        self.checkBox_DCS_ActiveCount = QtGui.QCheckBox(self.groupBox_14)
        self.checkBox_DCS_ActiveCount.setGeometry(QtCore.QRect(22, 33, 31, 22))
        self.checkBox_DCS_ActiveCount.setText(_fromUtf8(""))
        self.checkBox_DCS_ActiveCount.setChecked(True)
        self.checkBox_DCS_ActiveCount.setObjectName(_fromUtf8("checkBox_DCS_ActiveCount"))
        self.GroupBox_10 = QtGui.QGroupBox(self.tab_DCS)
        self.GroupBox_10.setGeometry(QtCore.QRect(10, 290, 511, 61))
        self.GroupBox_10.setObjectName(_fromUtf8("GroupBox_10"))
        self.gridLayoutWidget_5 = QtGui.QWidget(self.GroupBox_10)
        self.gridLayoutWidget_5.setGeometry(QtCore.QRect(10, 23, 481, 31))
        self.gridLayoutWidget_5.setObjectName(_fromUtf8("gridLayoutWidget_5"))
        self.gridLayout_6 = QtGui.QGridLayout(self.gridLayoutWidget_5)
        self.gridLayout_6.setMargin(0)
        self.gridLayout_6.setObjectName(_fromUtf8("gridLayout_6"))
        self.checkBox_DCSAll = QtGui.QCheckBox(self.gridLayoutWidget_5)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_DCSAll.sizePolicy().hasHeightForWidth())
        self.checkBox_DCSAll.setSizePolicy(sizePolicy)
        self.checkBox_DCSAll.setObjectName(_fromUtf8("checkBox_DCSAll"))
        self.gridLayout_6.addWidget(self.checkBox_DCSAll, 0, 0, 1, 1)
        self.checkBox_DCSDatSerSum = QtGui.QCheckBox(self.gridLayoutWidget_5)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_DCSDatSerSum.sizePolicy().hasHeightForWidth())
        self.checkBox_DCSDatSerSum.setSizePolicy(sizePolicy)
        self.checkBox_DCSDatSerSum.setObjectName(_fromUtf8("checkBox_DCSDatSerSum"))
        self.gridLayout_6.addWidget(self.checkBox_DCSDatSerSum, 0, 1, 1, 1)
        self.checkBox_DCSCovSum = QtGui.QCheckBox(self.gridLayoutWidget_5)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_DCSCovSum.sizePolicy().hasHeightForWidth())
        self.checkBox_DCSCovSum.setSizePolicy(sizePolicy)
        self.checkBox_DCSCovSum.setObjectName(_fromUtf8("checkBox_DCSCovSum"))
        self.gridLayout_6.addWidget(self.checkBox_DCSCovSum, 0, 2, 1, 1)
        self.checkBox_DCSIDonly = QtGui.QCheckBox(self.tab_DCS)
        self.checkBox_DCSIDonly.setGeometry(QtCore.QRect(564, 500, 191, 22))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.checkBox_DCSIDonly.setFont(font)
        self.checkBox_DCSIDonly.setChecked(True)
        self.checkBox_DCSIDonly.setObjectName(_fromUtf8("checkBox_DCSIDonly"))
        self.label_5 = QtGui.QLabel(self.tab_DCS)
        self.label_5.setGeometry(QtCore.QRect(10, 77, 731, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName(_fromUtf8("label_5"))
        self.tabWidget_EOWcsClient2.addTab(self.tab_DCS, _fromUtf8(""))
        self.tab_GCov = QtGui.QWidget()
        self.tab_GCov.setEnabled(False)
        self.tab_GCov.setObjectName(_fromUtf8("tab_GCov"))
        self.pushButton_GCov = QtGui.QPushButton(self.tab_GCov)
        self.pushButton_GCov.setGeometry(QtCore.QRect(550, 566, 211, 41))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_GCov.setFont(font)
        self.pushButton_GCov.setObjectName(_fromUtf8("pushButton_GCov"))
        self.btnClose_GCov = QtGui.QPushButton(self.tab_GCov)
        self.btnClose_GCov.setGeometry(QtCore.QRect(431, 573, 98, 27))
        self.btnClose_GCov.setObjectName(_fromUtf8("btnClose_GCov"))
        self.treeWidget_GCov = QtGui.QTreeWidget(self.tab_GCov)
        self.treeWidget_GCov.setGeometry(QtCore.QRect(10, 70, 762, 181))
        self.treeWidget_GCov.setSelectionMode(QtGui.QAbstractItemView.MultiSelection)
        self.treeWidget_GCov.setColumnCount(1)
        self.treeWidget_GCov.setObjectName(_fromUtf8("treeWidget_GCov"))
        self.treeWidget_GCov.header().setDefaultSectionSize(200)
        self.label_GCovInfo1 = QtGui.QLabel(self.tab_GCov)
        self.label_GCovInfo1.setGeometry(QtCore.QRect(10, 20, 281, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_GCovInfo1.setFont(font)
        self.label_GCovInfo1.setObjectName(_fromUtf8("label_GCovInfo1"))
        self.label_GCOvInfo2 = QtGui.QLabel(self.tab_GCov)
        self.label_GCOvInfo2.setGeometry(QtCore.QRect(10, 46, 661, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_GCOvInfo2.setFont(font)
        self.label_GCOvInfo2.setObjectName(_fromUtf8("label_GCOvInfo2"))
        self.groupBox_15 = QtGui.QGroupBox(self.tab_GCov)
        self.groupBox_15.setGeometry(QtCore.QRect(7, 260, 401, 361))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.groupBox_15.setFont(font)
        self.groupBox_15.setFlat(False)
        self.groupBox_15.setObjectName(_fromUtf8("groupBox_15"))
        self.groupBox_16 = QtGui.QGroupBox(self.groupBox_15)
        self.groupBox_16.setGeometry(QtCore.QRect(10, 23, 381, 151))
        self.groupBox_16.setObjectName(_fromUtf8("groupBox_16"))
        self.label_GCovMinLat = QtGui.QLabel(self.groupBox_16)
        self.label_GCovMinLat.setGeometry(QtCore.QRect(146, 120, 89, 17))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_GCovMinLat.sizePolicy().hasHeightForWidth())
        self.label_GCovMinLat.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_GCovMinLat.setFont(font)
        self.label_GCovMinLat.setObjectName(_fromUtf8("label_GCovMinLat"))
        self.label_GCovMaxLat = QtGui.QLabel(self.groupBox_16)
        self.label_GCovMaxLat.setGeometry(QtCore.QRect(149, -2, 92, 17))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_GCovMaxLat.sizePolicy().hasHeightForWidth())
        self.label_GCovMaxLat.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_GCovMaxLat.setFont(font)
        self.label_GCovMaxLat.setObjectName(_fromUtf8("label_GCovMaxLat"))
        self.lineEdit_GCovMinLat = QtGui.QLineEdit(self.groupBox_16)
        self.lineEdit_GCovMinLat.setGeometry(QtCore.QRect(121, 87, 151, 27))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_GCovMinLat.sizePolicy().hasHeightForWidth())
        self.lineEdit_GCovMinLat.setSizePolicy(sizePolicy)
        self.lineEdit_GCovMinLat.setObjectName(_fromUtf8("lineEdit_GCovMinLat"))
        self.label_GCovMaxLon = QtGui.QLabel(self.groupBox_16)
        self.label_GCovMaxLon.setGeometry(QtCore.QRect(306, 47, 71, 41))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_GCovMaxLon.sizePolicy().hasHeightForWidth())
        self.label_GCovMaxLon.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_GCovMaxLon.setFont(font)
        self.label_GCovMaxLon.setAlignment(QtCore.Qt.AlignCenter)
        self.label_GCovMaxLon.setObjectName(_fromUtf8("label_GCovMaxLon"))
        self.label_GCovMinLon = QtGui.QLabel(self.groupBox_16)
        self.label_GCovMinLon.setGeometry(QtCore.QRect(-4, 47, 81, 41))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_GCovMinLon.sizePolicy().hasHeightForWidth())
        self.label_GCovMinLon.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_GCovMinLon.setFont(font)
        self.label_GCovMinLon.setAlignment(QtCore.Qt.AlignCenter)
        self.label_GCovMinLon.setObjectName(_fromUtf8("label_GCovMinLon"))
        self.lineEdit_GCovMaxLat = QtGui.QLineEdit(self.groupBox_16)
        self.lineEdit_GCovMaxLat.setGeometry(QtCore.QRect(121, 21, 151, 27))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_GCovMaxLat.sizePolicy().hasHeightForWidth())
        self.lineEdit_GCovMaxLat.setSizePolicy(sizePolicy)
        self.lineEdit_GCovMaxLat.setObjectName(_fromUtf8("lineEdit_GCovMaxLat"))
        self.lineEdit_GCovMinLon = QtGui.QLineEdit(self.groupBox_16)
        self.lineEdit_GCovMinLon.setGeometry(QtCore.QRect(76, 54, 101, 27))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_GCovMinLon.sizePolicy().hasHeightForWidth())
        self.lineEdit_GCovMinLon.setSizePolicy(sizePolicy)
        self.lineEdit_GCovMinLon.setObjectName(_fromUtf8("lineEdit_GCovMinLon"))
        self.lineEdit_GCovMaxLon = QtGui.QLineEdit(self.groupBox_16)
        self.lineEdit_GCovMaxLon.setGeometry(QtCore.QRect(200, 54, 101, 27))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_GCovMaxLon.sizePolicy().hasHeightForWidth())
        self.lineEdit_GCovMaxLon.setSizePolicy(sizePolicy)
        self.lineEdit_GCovMaxLon.setObjectName(_fromUtf8("lineEdit_GCovMaxLon"))
        self.label_GCOvBands = QtGui.QLabel(self.groupBox_15)
        self.label_GCOvBands.setGeometry(QtCore.QRect(30, 182, 121, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_GCOvBands.setFont(font)
        self.label_GCOvBands.setObjectName(_fromUtf8("label_GCOvBands"))
        self.lineEdit_GCovBands = QtGui.QLineEdit(self.groupBox_15)
        self.lineEdit_GCovBands.setGeometry(QtCore.QRect(170, 183, 141, 27))
        self.lineEdit_GCovBands.setObjectName(_fromUtf8("lineEdit_GCovBands"))
        self.label_GCovInterpol = QtGui.QLabel(self.groupBox_15)
        self.label_GCovInterpol.setGeometry(QtCore.QRect(30, 230, 111, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_GCovInterpol.setFont(font)
        self.label_GCovInterpol.setObjectName(_fromUtf8("label_GCovInterpol"))
        self.label_GCovOutFormat = QtGui.QLabel(self.groupBox_15)
        self.label_GCovOutFormat.setGeometry(QtCore.QRect(28, 279, 141, 20))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_GCovOutFormat.setFont(font)
        self.label_GCovOutFormat.setObjectName(_fromUtf8("label_GCovOutFormat"))
        self.comboBox_GCOvOutFormat = QtGui.QComboBox(self.groupBox_15)
        self.comboBox_GCOvOutFormat.setGeometry(QtCore.QRect(170, 276, 141, 27))
        self.comboBox_GCOvOutFormat.setObjectName(_fromUtf8("comboBox_GCOvOutFormat"))
        self.comboBox_GCovInterpol = QtGui.QComboBox(self.groupBox_15)
        self.comboBox_GCovInterpol.setGeometry(QtCore.QRect(170, 227, 141, 27))
        self.comboBox_GCovInterpol.setObjectName(_fromUtf8("comboBox_GCovInterpol"))
        self.comboBox_GCovInterpol.addItem(_fromUtf8(""))
        self.comboBox_GCovInterpol.addItem(_fromUtf8(""))
        self.comboBox_GCovInterpol.addItem(_fromUtf8(""))
        self.comboBox_GCovOutCRS = QtGui.QComboBox(self.groupBox_15)
        self.comboBox_GCovOutCRS.setGeometry(QtCore.QRect(171, 321, 141, 27))
        self.comboBox_GCovOutCRS.setObjectName(_fromUtf8("comboBox_GCovOutCRS"))
        self.label_GCovOutCRS = QtGui.QLabel(self.groupBox_15)
        self.label_GCovOutCRS.setGeometry(QtCore.QRect(29, 320, 111, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_GCovOutCRS.setFont(font)
        self.label_GCovOutCRS.setObjectName(_fromUtf8("label_GCovOutCRS"))
        self.groupBox_18 = QtGui.QGroupBox(self.tab_GCov)
        self.groupBox_18.setGeometry(QtCore.QRect(400, 369, 361, 191))
        self.groupBox_18.setObjectName(_fromUtf8("groupBox_18"))
        self.groupBox_19 = QtGui.QGroupBox(self.groupBox_18)
        self.groupBox_19.setGeometry(QtCore.QRect(29, 23, 341, 86))
        self.groupBox_19.setObjectName(_fromUtf8("groupBox_19"))
        self.gridLayout_7 = QtGui.QGridLayout(self.groupBox_19)
        self.gridLayout_7.setObjectName(_fromUtf8("gridLayout_7"))
        self.lineEdit_GCovXAxisLabel = QtGui.QLineEdit(self.groupBox_19)
        self.lineEdit_GCovXAxisLabel.setEnabled(False)
        self.lineEdit_GCovXAxisLabel.setObjectName(_fromUtf8("lineEdit_GCovXAxisLabel"))
        self.gridLayout_7.addWidget(self.lineEdit_GCovXAxisLabel, 1, 1, 2, 1)
        self.radioButton_GCovXRes = QtGui.QRadioButton(self.groupBox_19)
        self.radioButton_GCovXRes.setAutoExclusive(False)
        self.radioButton_GCovXRes.setObjectName(_fromUtf8("radioButton_GCovXRes"))
        self.gridLayout_7.addWidget(self.radioButton_GCovXRes, 2, 0, 1, 1)
        self.label_GCovXRes = QtGui.QLabel(self.groupBox_19)
        self.label_GCovXRes.setAlignment(QtCore.Qt.AlignCenter)
        self.label_GCovXRes.setObjectName(_fromUtf8("label_GCovXRes"))
        self.gridLayout_7.addWidget(self.label_GCovXRes, 0, 1, 1, 1)
        self.radioButton_GCovXSize = QtGui.QRadioButton(self.groupBox_19)
        self.radioButton_GCovXSize.setAutoExclusive(False)
        self.radioButton_GCovXSize.setObjectName(_fromUtf8("radioButton_GCovXSize"))
        self.gridLayout_7.addWidget(self.radioButton_GCovXSize, 0, 0, 1, 1)
        self.label_GCovXSize = QtGui.QLabel(self.groupBox_19)
        self.label_GCovXSize.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_GCovXSize.setAlignment(QtCore.Qt.AlignCenter)
        self.label_GCovXSize.setObjectName(_fromUtf8("label_GCovXSize"))
        self.gridLayout_7.addWidget(self.label_GCovXSize, 0, 2, 1, 1)
        self.lineEdit_GCovXSize = QtGui.QLineEdit(self.groupBox_19)
        self.lineEdit_GCovXSize.setEnabled(False)
        self.lineEdit_GCovXSize.setObjectName(_fromUtf8("lineEdit_GCovXSize"))
        self.gridLayout_7.addWidget(self.lineEdit_GCovXSize, 1, 2, 2, 1)
        self.groupBox_20 = QtGui.QGroupBox(self.groupBox_18)
        self.groupBox_20.setGeometry(QtCore.QRect(30, 100, 341, 86))
        self.groupBox_20.setObjectName(_fromUtf8("groupBox_20"))
        self.gridLayout_8 = QtGui.QGridLayout(self.groupBox_20)
        self.gridLayout_8.setObjectName(_fromUtf8("gridLayout_8"))
        self.lineEdit_GCovYAxisLabel = QtGui.QLineEdit(self.groupBox_20)
        self.lineEdit_GCovYAxisLabel.setEnabled(False)
        self.lineEdit_GCovYAxisLabel.setObjectName(_fromUtf8("lineEdit_GCovYAxisLabel"))
        self.gridLayout_8.addWidget(self.lineEdit_GCovYAxisLabel, 1, 1, 2, 1)
        self.label_GCovYSize = QtGui.QLabel(self.groupBox_20)
        self.label_GCovYSize.setAlignment(QtCore.Qt.AlignCenter)
        self.label_GCovYSize.setObjectName(_fromUtf8("label_GCovYSize"))
        self.gridLayout_8.addWidget(self.label_GCovYSize, 0, 3, 1, 1)
        self.radioButton_GCovYSize = QtGui.QRadioButton(self.groupBox_20)
        self.radioButton_GCovYSize.setAutoExclusive(False)
        self.radioButton_GCovYSize.setObjectName(_fromUtf8("radioButton_GCovYSize"))
        self.gridLayout_8.addWidget(self.radioButton_GCovYSize, 0, 0, 1, 1)
        self.label_GCovYAxisLabel = QtGui.QLabel(self.groupBox_20)
        self.label_GCovYAxisLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.label_GCovYAxisLabel.setObjectName(_fromUtf8("label_GCovYAxisLabel"))
        self.gridLayout_8.addWidget(self.label_GCovYAxisLabel, 0, 1, 1, 1)
        self.radioButton_GCovYRes = QtGui.QRadioButton(self.groupBox_20)
        self.radioButton_GCovYRes.setAutoExclusive(False)
        self.radioButton_GCovYRes.setObjectName(_fromUtf8("radioButton_GCovYRes"))
        self.gridLayout_8.addWidget(self.radioButton_GCovYRes, 2, 0, 1, 1)
        self.lineEdit_GCovYSize = QtGui.QLineEdit(self.groupBox_20)
        self.lineEdit_GCovYSize.setEnabled(False)
        self.lineEdit_GCovYSize.setObjectName(_fromUtf8("lineEdit_GCovYSize"))
        self.gridLayout_8.addWidget(self.lineEdit_GCovYSize, 1, 3, 2, 1)
        self.radioButton_GCov_OutSizeOrig = QtGui.QRadioButton(self.groupBox_18)
        self.radioButton_GCov_OutSizeOrig.setGeometry(QtCore.QRect(134, 1, 151, 22))
        self.radioButton_GCov_OutSizeOrig.setChecked(True)
        self.radioButton_GCov_OutSizeOrig.setAutoExclusive(True)
        self.radioButton_GCov_OutSizeOrig.setObjectName(_fromUtf8("radioButton_GCov_OutSizeOrig"))
        self.groupBox_17 = QtGui.QGroupBox(self.tab_GCov)
        self.groupBox_17.setGeometry(QtCore.QRect(390, 262, 371, 101))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        font.setKerning(True)
        self.groupBox_17.setFont(font)
        self.groupBox_17.setObjectName(_fromUtf8("groupBox_17"))
        self.radioButton_GCovSubOrig = QtGui.QRadioButton(self.groupBox_17)
        self.radioButton_GCovSubOrig.setGeometry(QtCore.QRect(54, 23, 116, 22))
        self.radioButton_GCovSubOrig.setChecked(True)
        self.radioButton_GCovSubOrig.setObjectName(_fromUtf8("radioButton_GCovSubOrig"))
        self.radioButton_GCovSubCRS = QtGui.QRadioButton(self.groupBox_17)
        self.radioButton_GCovSubCRS.setGeometry(QtCore.QRect(185, 23, 81, 22))
        self.radioButton_GCovSubCRS.setObjectName(_fromUtf8("radioButton_GCovSubCRS"))
        self.radioButton_GCovSubPixel = QtGui.QRadioButton(self.groupBox_17)
        self.radioButton_GCovSubPixel.setGeometry(QtCore.QRect(288, 23, 71, 22))
        self.radioButton_GCovSubPixel.setObjectName(_fromUtf8("radioButton_GCovSubPixel"))
        self.lineEdit_GCovSubEPSG = QtGui.QLineEdit(self.groupBox_17)
        self.lineEdit_GCovSubEPSG.setEnabled(False)
        self.lineEdit_GCovSubEPSG.setGeometry(QtCore.QRect(185, 71, 101, 27))
        self.lineEdit_GCovSubEPSG.setObjectName(_fromUtf8("lineEdit_GCovSubEPSG"))
        self.label_GCovSubEPSG = QtGui.QLabel(self.groupBox_17)
        self.label_GCovSubEPSG.setGeometry(QtCore.QRect(187, 51, 66, 17))
        self.label_GCovSubEPSG.setObjectName(_fromUtf8("label_GCovSubEPSG"))
        self.tabWidget_EOWcsClient2.addTab(self.tab_GCov, _fromUtf8(""))
        self.tab_Help = QtGui.QWidget()
        self.tab_Help.setObjectName(_fromUtf8("tab_Help"))
        self.btnClose_Help = QtGui.QPushButton(self.tab_Help)
        self.btnClose_Help.setGeometry(QtCore.QRect(650, 582, 98, 27))
        self.btnClose_Help.setObjectName(_fromUtf8("btnClose_Help"))
        self.textEdit = QtGui.QTextEdit(self.tab_Help)
        self.textEdit.setGeometry(QtCore.QRect(10, 10, 751, 561))
        self.textEdit.setObjectName(_fromUtf8("textEdit"))
        self.tabWidget_EOWcsClient2.addTab(self.tab_Help, _fromUtf8(""))
        self.tab_About = QtGui.QWidget()
        self.tab_About.setObjectName(_fromUtf8("tab_About"))
        self.btnClose_About = QtGui.QPushButton(self.tab_About)
        self.btnClose_About.setGeometry(QtCore.QRect(650, 570, 98, 27))
        self.btnClose_About.setObjectName(_fromUtf8("btnClose_About"))
        self.textEdit_2 = QtGui.QTextEdit(self.tab_About)
        self.textEdit_2.setGeometry(QtCore.QRect(20, 20, 731, 521))
        self.textEdit_2.setObjectName(_fromUtf8("textEdit_2"))
        self.tabWidget_EOWcsClient2.addTab(self.tab_About, _fromUtf8(""))

        self.retranslateUi(QgsWcsClient2)
        self.tabWidget_EOWcsClient2.setCurrentIndex(0)
        QtCore.QObject.connect(self.btnClose_Serv, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.close)
        QtCore.QObject.connect(self.btnClose_GCa, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.close)
        QtCore.QObject.connect(self.checkBox_GCa_ActiveDate, QtCore.SIGNAL(_fromUtf8("stateChanged(int)")), QgsWcsClient2.updateDateChanged)
        QtCore.QObject.connect(self.btnClose_DC, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.close)
        QtCore.QObject.connect(self.btnClose_Help, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.close)
        QtCore.QObject.connect(self.btnClose_GCov, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.close)
        QtCore.QObject.connect(self.pushButton_GCa, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.exeGetCapabilities)
        QtCore.QObject.connect(self.btnDelete_Serv, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.deleteServer)
        QtCore.QObject.connect(self.btnClose_About, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.close)
        QtCore.QObject.connect(self.btnEdit_Serv, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.editServer)
        QtCore.QObject.connect(self.pushButton_GCov, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.exeGetCoverage)
        QtCore.QObject.connect(self.pushButton_DC, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.exeDescribeCoverage)
        QtCore.QObject.connect(self.btnClose_DCS, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.close)
        QtCore.QObject.connect(self.btnNew_Serv, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.newServer)
        QtCore.QObject.connect(self.pushButton_DCS, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.exeDescribeEOCoverageSet)
        QtCore.QObject.connect(self.btnConnectServer_Serv, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.connectServer)
        QtCore.QObject.connect(self.checkBox_DCS_ActiveDate, QtCore.SIGNAL(_fromUtf8("stateChanged(int)")), QgsWcsClient2.enableDCS_ActiveDate)
        QtCore.QObject.connect(self.checkBox_DCS_ActiveCount, QtCore.SIGNAL(_fromUtf8("stateChanged(int)")), QgsWcsClient2.enableDCS_ActiveCount)
        QtCore.QObject.connect(self.radioButton_GCovSubOrig, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.enableGCov_SubOrig)
        QtCore.QObject.connect(self.radioButton_GCovSubCRS, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.enableGCov_SubCRS)
        QtCore.QObject.connect(self.radioButton_GCovSubPixel, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.enableGCov_SubPixel)
        QtCore.QObject.connect(self.radioButton_GCovXSize, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.enableGCov_XSize)
        QtCore.QObject.connect(self.radioButton_GCovXRes, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.enableGCov_XResolution)
        QtCore.QObject.connect(self.radioButton_GCovYSize, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.enableGCov_YSize)
        QtCore.QObject.connect(self.radioButton_GCovYRes, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.enableGCov_YResolution)
        QtCore.QObject.connect(self.radioButton_GCov_OutSizeOrig, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.disableGCov_OutSize)
        QtCore.QObject.connect(self.toolButton_Serv_OutputLoc, QtCore.SIGNAL(_fromUtf8("clicked()")), QgsWcsClient2.get_outputLoc)
        QtCore.QMetaObject.connectSlotsByName(QgsWcsClient2)
        QgsWcsClient2.setTabOrder(self.tabWidget_EOWcsClient2, self.btnNew_Serv)
        QgsWcsClient2.setTabOrder(self.btnNew_Serv, self.btnEdit_Serv)
        QgsWcsClient2.setTabOrder(self.btnEdit_Serv, self.btnConnectServer_Serv)
        QgsWcsClient2.setTabOrder(self.btnConnectServer_Serv, self.cmbConnections_Serv)
        QgsWcsClient2.setTabOrder(self.cmbConnections_Serv, self.btnDelete_Serv)
        QgsWcsClient2.setTabOrder(self.btnDelete_Serv, self.textBrowser_Serv)
        QgsWcsClient2.setTabOrder(self.textBrowser_Serv, self.btnClose_Serv)
        QgsWcsClient2.setTabOrder(self.btnClose_Serv, self.toolButton_Serv_OutputLoc)
        QgsWcsClient2.setTabOrder(self.toolButton_Serv_OutputLoc, self.lineEdit_Serv_OutputLoc)
        QgsWcsClient2.setTabOrder(self.lineEdit_Serv_OutputLoc, self.checkBox_GCaDaSerSum)
        QgsWcsClient2.setTabOrder(self.checkBox_GCaDaSerSum, self.checkBox_GCaCovSum)
        QgsWcsClient2.setTabOrder(self.checkBox_GCaCovSum, self.checkBox_GCaServProv)
        QgsWcsClient2.setTabOrder(self.checkBox_GCaServProv, self.checkBox_GCaAll)
        QgsWcsClient2.setTabOrder(self.checkBox_GCaAll, self.checkBox_GCaServId)
        QgsWcsClient2.setTabOrder(self.checkBox_GCaServId, self.checkBox_GCaLang)
        QgsWcsClient2.setTabOrder(self.checkBox_GCaLang, self.checkBox_GCaCont)
        QgsWcsClient2.setTabOrder(self.checkBox_GCaCont, self.checkBox_GCaOpMeta)
        QgsWcsClient2.setTabOrder(self.checkBox_GCaOpMeta, self.checkBox_GCaServMeta)
        QgsWcsClient2.setTabOrder(self.checkBox_GCaServMeta, self.checkBox_GCa_ActiveDate)
        QgsWcsClient2.setTabOrder(self.checkBox_GCa_ActiveDate, self.pushButton_GCa)
        QgsWcsClient2.setTabOrder(self.pushButton_GCa, self.btnClose_GCa)
        QgsWcsClient2.setTabOrder(self.btnClose_GCa, self.treeWidget_GCa)
        QgsWcsClient2.setTabOrder(self.treeWidget_GCa, self.dateEdit_GCaDocUpdate)
        QgsWcsClient2.setTabOrder(self.dateEdit_GCaDocUpdate, self.treeWidget_DC)
        QgsWcsClient2.setTabOrder(self.treeWidget_DC, self.pushButton_DC)
        QgsWcsClient2.setTabOrder(self.pushButton_DC, self.btnClose_DC)
        QgsWcsClient2.setTabOrder(self.btnClose_DC, self.pushButton_DCS)
        QgsWcsClient2.setTabOrder(self.pushButton_DCS, self.treeWidget_DCS)
        QgsWcsClient2.setTabOrder(self.treeWidget_DCS, self.btnClose_DCS)
        QgsWcsClient2.setTabOrder(self.btnClose_DCS, self.lineEdit_DCSMaxLat)
        QgsWcsClient2.setTabOrder(self.lineEdit_DCSMaxLat, self.lineEdit_DCSMinLon)
        QgsWcsClient2.setTabOrder(self.lineEdit_DCSMinLon, self.lineEdit_DCSMaxLon)
        QgsWcsClient2.setTabOrder(self.lineEdit_DCSMaxLon, self.lineEdit_DCSMinLat)
        QgsWcsClient2.setTabOrder(self.lineEdit_DCSMinLat, self.dateTimeEdit_DCSBegin)
        QgsWcsClient2.setTabOrder(self.dateTimeEdit_DCSBegin, self.dateTimeEdit_DCSEnd)
        QgsWcsClient2.setTabOrder(self.dateTimeEdit_DCSEnd, self.checkBox_DCS_ActiveDate)
        QgsWcsClient2.setTabOrder(self.checkBox_DCS_ActiveDate, self.radioButton_ContOver)
        QgsWcsClient2.setTabOrder(self.radioButton_ContOver, self.radioButton_ContCont)
        QgsWcsClient2.setTabOrder(self.radioButton_ContCont, self.spinBox_DCSCount)
        QgsWcsClient2.setTabOrder(self.spinBox_DCSCount, self.checkBox_DCS_ActiveCount)
        QgsWcsClient2.setTabOrder(self.checkBox_DCS_ActiveCount, self.checkBox_DCSAll)
        QgsWcsClient2.setTabOrder(self.checkBox_DCSAll, self.checkBox_DCSDatSerSum)
        QgsWcsClient2.setTabOrder(self.checkBox_DCSDatSerSum, self.checkBox_DCSCovSum)
        QgsWcsClient2.setTabOrder(self.checkBox_DCSCovSum, self.checkBox_DCSIDonly)
        QgsWcsClient2.setTabOrder(self.checkBox_DCSIDonly, self.pushButton_GCov)
        QgsWcsClient2.setTabOrder(self.pushButton_GCov, self.btnClose_GCov)
        QgsWcsClient2.setTabOrder(self.btnClose_GCov, self.treeWidget_GCov)
        QgsWcsClient2.setTabOrder(self.treeWidget_GCov, self.lineEdit_GCovMaxLat)
        QgsWcsClient2.setTabOrder(self.lineEdit_GCovMaxLat, self.lineEdit_GCovMinLon)
        QgsWcsClient2.setTabOrder(self.lineEdit_GCovMinLon, self.lineEdit_GCovMaxLon)
        QgsWcsClient2.setTabOrder(self.lineEdit_GCovMaxLon, self.lineEdit_GCovMinLat)
        QgsWcsClient2.setTabOrder(self.lineEdit_GCovMinLat, self.lineEdit_GCovBands)
        QgsWcsClient2.setTabOrder(self.lineEdit_GCovBands, self.comboBox_GCOvOutFormat)
        QgsWcsClient2.setTabOrder(self.comboBox_GCOvOutFormat, self.comboBox_GCovInterpol)
        QgsWcsClient2.setTabOrder(self.comboBox_GCovInterpol, self.comboBox_GCovOutCRS)
        QgsWcsClient2.setTabOrder(self.comboBox_GCovOutCRS, self.lineEdit_GCovXAxisLabel)
        QgsWcsClient2.setTabOrder(self.lineEdit_GCovXAxisLabel, self.radioButton_GCovXRes)
        QgsWcsClient2.setTabOrder(self.radioButton_GCovXRes, self.radioButton_GCovXSize)
        QgsWcsClient2.setTabOrder(self.radioButton_GCovXSize, self.lineEdit_GCovXSize)
        QgsWcsClient2.setTabOrder(self.lineEdit_GCovXSize, self.lineEdit_GCovYAxisLabel)
        QgsWcsClient2.setTabOrder(self.lineEdit_GCovYAxisLabel, self.radioButton_GCovYSize)
        QgsWcsClient2.setTabOrder(self.radioButton_GCovYSize, self.radioButton_GCovYRes)
        QgsWcsClient2.setTabOrder(self.radioButton_GCovYRes, self.lineEdit_GCovYSize)
        QgsWcsClient2.setTabOrder(self.lineEdit_GCovYSize, self.radioButton_GCov_OutSizeOrig)
        QgsWcsClient2.setTabOrder(self.radioButton_GCov_OutSizeOrig, self.radioButton_GCovSubOrig)
        QgsWcsClient2.setTabOrder(self.radioButton_GCovSubOrig, self.radioButton_GCovSubCRS)
        QgsWcsClient2.setTabOrder(self.radioButton_GCovSubCRS, self.radioButton_GCovSubPixel)
        QgsWcsClient2.setTabOrder(self.radioButton_GCovSubPixel, self.lineEdit_GCovSubEPSG)
        QgsWcsClient2.setTabOrder(self.lineEdit_GCovSubEPSG, self.btnClose_Help)
        QgsWcsClient2.setTabOrder(self.btnClose_Help, self.btnClose_About)

    def retranslateUi(self, QgsWcsClient2):
        QgsWcsClient2.setWindowTitle(_translate("QgsWcsClient2", "QgsWcsClient2", None))
        self.GroupBox_9.setTitle(_translate("QgsWcsClient2", "Server Connections:", None))
        self.btnDelete_Serv.setText(_translate("QgsWcsClient2", "&Delete", None))
        self.btnEdit_Serv.setText(_translate("QgsWcsClient2", "&Edit", None))
        self.btnNew_Serv.setText(_translate("QgsWcsClient2", "&New", None))
        self.btnConnectServer_Serv.setText(_translate("QgsWcsClient2", "&Connect to Server", None))
        self.label_6.setText(_translate("QgsWcsClient2", "Server", None))
        self.btnClose_Serv.setText(_translate("QgsWcsClient2", "Close", None))
        self.label_2.setText(_translate("QgsWcsClient2", "General Information  / Errors / etc.", None))
        self.groupBox.setTitle(_translate("QgsWcsClient2", "Local Storage Path  (only required for downloading with GetCoverage): ", None))
        self.toolButton_Serv_OutputLoc.setText(_translate("QgsWcsClient2", "...", None))
        self.tabWidget_EOWcsClient2.setTabText(self.tabWidget_EOWcsClient2.indexOf(self.tab_Serv), _translate("QgsWcsClient2", "Server / Storage", None))
        self.GroupBox_4.setTitle(_translate("QgsWcsClient2", "Capabilities Document - Select Sections:", None))
        self.checkBox_GCaDaSerSum.setText(_translate("QgsWcsClient2", "DatasetSeriesSummary", None))
        self.checkBox_GCaCovSum.setText(_translate("QgsWcsClient2", "CoverageSummary", None))
        self.checkBox_GCaServProv.setText(_translate("QgsWcsClient2", "ServiceProvider", None))
        self.checkBox_GCaAll.setText(_translate("QgsWcsClient2", "All", None))
        self.checkBox_GCaServId.setText(_translate("QgsWcsClient2", "ServiceIdentification", None))
        self.checkBox_GCaLang.setText(_translate("QgsWcsClient2", "Languages", None))
        self.checkBox_GCaCont.setText(_translate("QgsWcsClient2", "Contents", None))
        self.checkBox_GCaOpMeta.setText(_translate("QgsWcsClient2", "OperationsMetadata", None))
        self.checkBox_GCaServMeta.setText(_translate("QgsWcsClient2", "ServiceMetadata", None))
        self.label.setText(_translate("QgsWcsClient2", "( Note:  some WCS Servers might not respect these section parameters )", None))
        self.label_GCaInfo1.setText(_translate("QgsWcsClient2", "Document UpdateSequence - \n"
"only update when newer then:", None))
        self.pushButton_GCa.setText(_translate("QgsWcsClient2", "GetCapabilities", None))
        self.btnClose_GCa.setText(_translate("QgsWcsClient2", "Close", None))
        self.treeWidget_GCa.setSortingEnabled(True)
        self.treeWidget_GCa.headerItem().setText(0, _translate("QgsWcsClient2", "CoverageID/DataSetSeriesID", None))
        self.treeWidget_GCa.headerItem().setText(1, _translate("QgsWcsClient2", "BeginTime", None))
        self.treeWidget_GCa.headerItem().setText(2, _translate("QgsWcsClient2", "EndTime", None))
        self.treeWidget_GCa.headerItem().setText(3, _translate("QgsWcsClient2", "[C]overage/[S]eries", None))
        self.dateEdit_GCaDocUpdate.setSpecialValueText(_translate("QgsWcsClient2", "1970-01-01", None))
        self.dateEdit_GCaDocUpdate.setDisplayFormat(_translate("QgsWcsClient2", "yyyy-MM-dd", None))
        self.label_3.setText(_translate("QgsWcsClient2", "Results of GetCapabilities Request:    Select one or more items for further usage:", None))
        self.tabWidget_EOWcsClient2.setTabText(self.tabWidget_EOWcsClient2.indexOf(self.tab_GCa), _translate("QgsWcsClient2", "GetCapabilities", None))
        self.treeWidget_DC.setSortingEnabled(True)
        self.treeWidget_DC.headerItem().setText(0, _translate("QgsWcsClient2", "CoverageIDs", None))
        self.label_DCInfo1.setText(_translate("QgsWcsClient2", "Describe a Coverage or a Stitched Mosaic:", None))
        self.label_DCInfo2.setText(_translate("QgsWcsClient2", "Select the CoverageID\'s of interest, then press the DescribeCoverage button.", None))
        self.pushButton_DC.setText(_translate("QgsWcsClient2", "DescribeCoverage", None))
        self.btnClose_DC.setText(_translate("QgsWcsClient2", "Close", None))
        self.label_4.setText(_translate("QgsWcsClient2", "Selections from GetCapabilities Result:  Select one item to be used in a DescribeCoverage Requests:", None))
        self.tabWidget_EOWcsClient2.setTabText(self.tabWidget_EOWcsClient2.indexOf(self.tab_DC), _translate("QgsWcsClient2", "DescribeCoverage", None))
        self.pushButton_DCS.setText(_translate("QgsWcsClient2", "DescribeEOCoverageSet", None))
        self.label_DCSInfo2.setText(_translate("QgsWcsClient2", "Select the ID of interest, choose optional AOI and TOI, then press the DescribeEOCoverageSet button.", None))
        self.label_DCSInfo1.setText(_translate("QgsWcsClient2", "Describe a DatsetSeries,  a Coverage, or a Stitched Mosaic:", None))
        self.treeWidget_DCS.setSortingEnabled(True)
        self.treeWidget_DCS.headerItem().setText(0, _translate("QgsWcsClient2", "CoverageID/DataSeriesID", None))
        self.treeWidget_DCS.headerItem().setText(1, _translate("QgsWcsClient2", "BeginTime", None))
        self.treeWidget_DCS.headerItem().setText(2, _translate("QgsWcsClient2", "EndTime", None))
        self.btnClose_DCS.setText(_translate("QgsWcsClient2", "Close", None))
        self.groupBox_11.setTitle(_translate("QgsWcsClient2", "Area of Interest  (AOI in WGS-84):", None))
        self.label_DCSMaxLon.setText(_translate("QgsWcsClient2", "Max. \n"
"Longitude", None))
        self.label_DCSMinLat.setText(_translate("QgsWcsClient2", "Min. Latitude", None))
        self.label_DCSMinLon.setText(_translate("QgsWcsClient2", "Min. \n"
"Longitude", None))
        self.label_DCSMaxLat.setText(_translate("QgsWcsClient2", "Max. Latitude", None))
        self.groupBox_12.setTitle(_translate("QgsWcsClient2", "Time of Interrest (TOI):", None))
        self.dateTimeEdit_DCSBegin.setDisplayFormat(_translate("QgsWcsClient2", "yyyy-MM-ddThh:mm ", None))
        self.dateTimeEdit_DCSEnd.setDisplayFormat(_translate("QgsWcsClient2", "yyyy-MM-ddThh:mm ", None))
        self.label_DCSBegin.setText(_translate("QgsWcsClient2", "Begin Time:", None))
        self.label_DCSEnd.setText(_translate("QgsWcsClient2", "End Time:", None))
        self.groupBox_13.setTitle(_translate("QgsWcsClient2", "Containment:", None))
        self.radioButton_ContOver.setText(_translate("QgsWcsClient2", "overlaps", None))
        self.radioButton_ContCont.setText(_translate("QgsWcsClient2", "contains", None))
        self.groupBox_14.setTitle(_translate("QgsWcsClient2", "Hits Count: ", None))
        self.GroupBox_10.setTitle(_translate("QgsWcsClient2", "EOCoverageSet Document - Select Sections:", None))
        self.checkBox_DCSAll.setText(_translate("QgsWcsClient2", "All", None))
        self.checkBox_DCSDatSerSum.setText(_translate("QgsWcsClient2", "DatasetSeriesSummary", None))
        self.checkBox_DCSCovSum.setText(_translate("QgsWcsClient2", "CoverageSummary", None))
        self.checkBox_DCSIDonly.setText(_translate("QgsWcsClient2", "Coverage IDs only", None))
        self.label_5.setText(_translate("QgsWcsClient2", "Selections from GetCapabilities Result:   Select item(s) for further usage:", None))
        self.tabWidget_EOWcsClient2.setTabText(self.tabWidget_EOWcsClient2.indexOf(self.tab_DCS), _translate("QgsWcsClient2", "DescribeEOCoverageSet", None))
        self.pushButton_GCov.setText(_translate("QgsWcsClient2", "GetCoverage", None))
        self.btnClose_GCov.setText(_translate("QgsWcsClient2", "Close", None))
        self.treeWidget_GCov.setSortingEnabled(True)
        self.treeWidget_GCov.headerItem().setText(0, _translate("QgsWcsClient2", "CoverageID", None))
        self.label_GCovInfo1.setText(_translate("QgsWcsClient2", "GetCoverage:   download a Coverage ", None))
        self.label_GCOvInfo2.setText(_translate("QgsWcsClient2", "Select the ID\'s of interest (and choose optional parameters), then press the GetCoverage button", None))
        self.groupBox_15.setTitle(_translate("QgsWcsClient2", "Output Subset:", None))
        self.groupBox_16.setTitle(_translate("QgsWcsClient2", "    Coordinates:", None))
        self.label_GCovMinLat.setText(_translate("QgsWcsClient2", "Min. Latitude", None))
        self.label_GCovMaxLat.setText(_translate("QgsWcsClient2", "Max. Latitude", None))
        self.label_GCovMaxLon.setText(_translate("QgsWcsClient2", "Max. \n"
"Longitude", None))
        self.label_GCovMinLon.setText(_translate("QgsWcsClient2", "Min. \n"
"Longitude", None))
        self.label_GCOvBands.setText(_translate("QgsWcsClient2", "List of Band No.:", None))
        self.label_GCovInterpol.setText(_translate("QgsWcsClient2", "Interpolation: ", None))
        self.label_GCovOutFormat.setText(_translate("QgsWcsClient2", "Output Format:", None))
        self.comboBox_GCovInterpol.setItemText(0, _translate("QgsWcsClient2", "nearest (default)", None))
        self.comboBox_GCovInterpol.setItemText(1, _translate("QgsWcsClient2", "bilinear", None))
        self.comboBox_GCovInterpol.setItemText(2, _translate("QgsWcsClient2", "average (slow)", None))
        self.label_GCovOutCRS.setText(_translate("QgsWcsClient2", "Output CRS\n"
" (EPSG):", None))
        self.groupBox_18.setTitle(_translate("QgsWcsClient2", "Output SIze:", None))
        self.groupBox_19.setTitle(_translate("QgsWcsClient2", "X-Dimension", None))
        self.radioButton_GCovXRes.setText(_translate("QgsWcsClient2", "X-Resolution", None))
        self.label_GCovXRes.setText(_translate("QgsWcsClient2", "X-Axis Label:", None))
        self.radioButton_GCovXSize.setText(_translate("QgsWcsClient2", "X-Size", None))
        self.label_GCovXSize.setText(_translate("QgsWcsClient2", "Size: ", None))
        self.groupBox_20.setTitle(_translate("QgsWcsClient2", "Y-Dimension", None))
        self.label_GCovYSize.setText(_translate("QgsWcsClient2", "Size: ", None))
        self.radioButton_GCovYSize.setText(_translate("QgsWcsClient2", "Y-Size", None))
        self.label_GCovYAxisLabel.setText(_translate("QgsWcsClient2", "Y-Axis Label:", None))
        self.radioButton_GCovYRes.setText(_translate("QgsWcsClient2", "Y-Resolution", None))
        self.radioButton_GCov_OutSizeOrig.setText(_translate("QgsWcsClient2", "Original Outsize:", None))
        self.groupBox_17.setTitle(_translate("QgsWcsClient2", "   Type of Subsetting:", None))
        self.radioButton_GCovSubOrig.setText(_translate("QgsWcsClient2", "Original", None))
        self.radioButton_GCovSubCRS.setText(_translate("QgsWcsClient2", "CRS", None))
        self.radioButton_GCovSubPixel.setText(_translate("QgsWcsClient2", "Pixel", None))
        self.label_GCovSubEPSG.setText(_translate("QgsWcsClient2", "EPSG No.:", None))
        self.tabWidget_EOWcsClient2.setTabText(self.tabWidget_EOWcsClient2.indexOf(self.tab_GCov), _translate("QgsWcsClient2", "GetCoverage", None))
        self.btnClose_Help.setText(_translate("QgsWcsClient2", "Close", None))
        self.textEdit.setHtml(_translate("QgsWcsClient2", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:18px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:xx-large; font-weight:600;\">QgsWcsClient2</span></p>\n"
"<p style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:x-large; font-weight:600;\">A OGC WCS 2.0/EO-WCS Client</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-weight:600;\">Author:</span><span style=\" font-family:\'arial,helvetica,sans-serif\';\">   Christian Schiller</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-weight:600;\">Copyright:</span><span style=\" font-family:\'arial,helvetica,sans-serif\';\">   EOX IT Services GmbH, Vienna, Austria, 2014</span></p>\n"
"<hr width=\"100%\"/>\n"
"<p style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:x-large; font-weight:600;\">Help - QgsWcsClient2:   Instructions and Hints</span></p>\n"
"<p style=\" margin-top:14px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:large; font-weight:600;\">Content:</span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"#Introduction\"><span style=\" text-decoration: underline; color:#0000ff;\">Introduction:</span></a>   What the QgsWcsClient2 plugin is about    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"#Getting Started\"><span style=\" text-decoration: underline; color:#0000ff;\">Getting Started:</span></a>   Initiating the QgsWcsClient2 plugin    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"#How To\"><span style=\" text-decoration: underline; color:#0000ff;\">How To:</span></a>   A detailed description of the available functionalities and settings    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"#Hint\"><span style=\" text-decoration: underline; color:#0000ff;\">Hint - Erroneous behaviour</span></a>    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"#Quick How To\"><span style=\" text-decoration: underline; color:#0000ff;\">Quick How To:</span></a>   A very short, stepwise description    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"#Other Stuff\"><span style=\" text-decoration: underline; color:#0000ff;\">Other Stuff</span></a></li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a name=\"Introduction\"></a><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:large; font-weight:600;\">I</span><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:large; font-weight:600;\">ntroduction:</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\">This WCS 2.0/EO-WCS client is intended to be used to access/download single Coverages, StitchedMosaics and DatasetSeries (which are offered by OGC WCS 2.0/EO-WCS conformant servers) in a convenient way from within QGis (&gt;2.0). Downloaded datasets are stored locally and loaded directly into QGis for further usage.<br />This client provides the possibility to send OGC </span><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-style:italic;\">GetCapabilities</span><span style=\" font-family:\'arial,helvetica,sans-serif\';\">, </span><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-style:italic;\">DescribeCoverage</span><span style=\" font-family:\'arial,helvetica,sans-serif\';\">, </span><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-style:italic;\">DescribeEOCoverageSet</span><span style=\" font-family:\'arial,helvetica,sans-serif\';\">, and </span><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-style:italic;\">GetCoverage</span><span style=\" font-family:\'arial,helvetica,sans-serif\';\"> requests to a selected WCS 2.0/EO-WCS server. The respective request results are received and either shown completely or the relevant information is extracted and provided in the GUI for further usage within the client.<br />The GUI provides tabs for each request, allowing to select optional parameters (e.g. sub-setting in space and/or time) to be sent with the request. However, not all servers may honor all optional parameters. So if you receive an error message or no answser at all try it with different optional settings. See also the \'How To\' section for further details and the \'Hint - Erroneous behaviour\' section.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a name=\"Getting Started\"></a><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:large; font-weight:600;\">G</span><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:large; font-weight:600;\">etting Started:</span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The first thing which needs to be done is to define at least one server in the &quot;Server/Storage&quot; tab. Press the &quot;New&quot; button, and enter a (personal) &quot;Server Name&quot; and the WCS Access &quot;Server URL&quot;. Press &quot;OK&quot; when done. All server entries are stored in the QgsWcsClient2 plugin installation directory.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Make sure the provided WCS Access &quot;Server URL&quot; complies to OGC OWS (e.g. usually OGC-Service Access-URls end with a &quot;?&quot;).    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The supplied server information can be changed anytime utilizing the &quot;Edit&quot; button.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Any server entry can be deleted utilizing the &quot;Delete&quot; button&quot;.     </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">When the server information has been provided, select the desired &quot;Server&quot; entry from the list and press the &quot;Connect to Server&quot; button.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">You always need to be connected to a server before you can send requests!</li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a name=\"How To\"></a><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:large; font-weight:600;\">H</span><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:large; font-weight:600;\">ow To:</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\">This section shortly describes a \'typical\' usage scenario, starting with a </span><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-style:italic;\">GetCapabilities</span><span style=\" font-family:\'arial,helvetica,sans-serif\';\"> request to the final download of Coverages utilizing a </span><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-style:italic;\">GetCoverage</span><span style=\" font-family:\'arial,helvetica,sans-serif\';\"> request.<br />It also explains the provided options available in the GUI.</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:medium; font-weight:600;\">Server/Storage tab</span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The QgsWcsClient2 plugin always starts with the &quot;Server/Storage&quot; tab.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Select the desired &quot;Server&quot; entry from the list and press the &quot;Connect to Server&quot; button. You always need to be connected to a server before you can send requests!    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">When the connection is established successfully, the line <span style=\" font-family:\'Courier New,courier\'; font-size:large;\">&quot;Response:  Server OK&quot;</span> is printed in the &quot;General Information / Errors / etc.&quot; field.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If you want to access/download a Coverage, you need to supply a &quot;Local Storage Path&quot;. Either type the path into the &quot;Local Storage Path&quot; field or use the &quot;...&quot; button for the path selection.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">When the server connection is established click on the &quot;GetCapabilities&quot; tab.</li></ul>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:medium; font-weight:600;\">GetCapabilities tab</span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The section parameters allows you to limit the amount and type of information retrieved from the WCS server. The following <span style=\" font-style:italic;\">GetCapabilities</span> section parameters are available:</li>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\"><br />        </span></p>\n"
"<ul type=\"circle\" style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">All:   Requests full information (equals to no selections)            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">DatasetSeriesSummary:   Summary about offered DatasetSeries            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">CoverageSummary:   Summary about offered Coverages            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">ServiceIdentification:   Information about available Service Profiles            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">ServiceProvider:   Information about the Service Provider            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">ServiceMetadata:   Information about offered File Formats, offered CRSs, etc.            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">OperationsMetadata:   Metadata about available Service Operations (e.g. enabled requests)            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Contents:   Overview of offered Content (i.e. list of CoverageIDs and basic DatasetSeries information)            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Languages:   Offered Languages (if available)        </li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\"><br />    </span></p>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">You may select requesting only sections (subsets) of the full <span style=\" font-style:italic;\">GetCapabilities</span> document. The default settings used have been chosen for fast and efficient usage (some WCS servers may return huge results and therefore take quite some time to respond).    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If you use the same server frequently you are probably not interested in \'older\' information. If you want to limit the returned information to \'newer\' offers only activate the &quot;Document Update Sequence&quot; check-box and provide a \'Cutoff Date\', i.e. only newer information shall be provided.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">When the desired options are chosen press the &quot;GetCapabilities&quot; button.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The returned results will be shown in the &quot;Results of GetCapabilities Request&quot; field. There you will see the the following columns:        </li>\n"
"<ul type=\"circle\" style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">CoverageID/DatasetSeriesID            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">BeginTime            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">EndTime            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">[C]overage/[S]eries        </li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\">In the first column either a CoverageID or a DatasetSeriesID is provided. The type of ID can be seen in the last column ([C] indicates a Coverage, [S] indicates a DatasetSerie). The two time columns are assumed to be self-explanatory.    </span></p>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">When the <span style=\" font-style:italic;\">GetCapabilities</span> results are listed you have to choose at least one CoverageID or DatasetSeriesID. However, the selection of multiple IDs is possible. <br />    The selected items will automatically show up in the &quot;DescribeCoverage&quot; tab and in the &quot;GetCapabilities&quot; tab (if a Coverage has been selected) or only the &quot;DescribeEOCoverageSet&quot; tab (if a DatasetSeries has been selected).    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Now continue, changing either to the &quot;DescribeCoverage&quot; tab or to the &quot;DescribeEOCoverageSet&quot; tab. If you have chosen only CoverageIDs you may also switch directly to the &quot;GetCapabilities&quot; tab.</li></ul>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:medium; font-weight:600;\">DescribeCoverage tab</span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If one or more CoverageIDs have been selected in the &quot;Results of GetCapabilities Request&quot; field they will be shown in the &quot;Selections from the GetCapabilities Results&quot; field. You need to select a single CoverageID to send a <span style=\" font-style:italic;\">DescribeCoverage</span> request to the server. The full results of this request will be shown in a separate window. No optional parameters are available for a <span style=\" font-style:italic;\">DescribeCoverage</span> request.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The provided information, however, may later be useful e.g. for specification of the Area of Interest (AOI).</li></ul>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:medium; font-weight:600;\">DescribeEOCoverageSet tab</span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If one or more DatasetSeriesIDs have been selected in the &quot;Results of GetCapabilities Request&quot; field they will be shown in the &quot;Selections from the GetCapabilities Results&quot; field.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">For the <span style=\" font-style:italic;\">DescribeEOCoverageSet</span> response document the following section restrictions are available:</li>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\"><br />        </span></p>\n"
"<ul type=\"circle\" style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">All:   Requests full information (equals to no selections)            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">DatasetSeriesSummary:   Summary about offered DatasetSeries            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Coverage Summary:   Summary about offered Coverages        </li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\"><br />    </span></p>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The <span style=\" font-style:italic;\">DescribeEoCoverageSet</span> request can be limited to a user provided Area of Interest (AOI). Here, the AOI always has to be provided in WGS84 !! coordinates (i.e. long/lat in degrees). To use an AOI just enter the desired coordinate values.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The <span style=\" font-style:italic;\">DescribeEoCoverageSet</span> request can also be limited to a user provided Time of Interest(TOI). The TOI has to be provided in ISO-Format. To activate the use of TOI click the respective check-box and choose the desired Date-Time values. You may modify the /DateTime values also manually. Providing a TOI will limit the returned results to the respective time period.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Containment:   This parameter allows to limit the hits according to:</li>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\"><br />        </span></p>\n"
"<ul type=\"circle\" style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">overlaps:   Coverages may just touch AOI            </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">contains:   Coverages must be fully inside AOI        </li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\"><br />    </span></p>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Hits Count:   Limits the number of the returned results.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Coverage IDs only:   This setting (non-standard) is not part of the request. It represents a \'convenience\' function which extracts the received CoverageIDs to be immediately used in the <span style=\" font-style:italic;\">GetCoverage</span> request. Not checking this check-box will result in the <span style=\" font-style:italic;\">DescribeEoCoverageSet</span> result document to be displayed in a separate window. If it is checked the resulting CoverageIDs will be extracted and listed in the &quot;GetCoverage&quot; tab to which the GUI will automatically change.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">You need to select one or more items befor sending a <span style=\" font-style:italic;\">DescribeEOCoverageSet</span> request.</li></ul>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:medium; font-weight:600;\">GetCoverage tab</span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The CoverageIDs returned by the <span style=\" font-style:italic;\">DescribeEOCoverageSet</span> request or selected in the &quot;Results of GetCapabilities Request&quot; field  are shown in the &quot;GetCoverage: download a Coverage&quot; field.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Select one or more CoverageIDs which you want to download and access in QGis.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The following optional parameters, to limit and configure the resulting downloaded Coverages, are provided:</li>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\"><br />    </span></p>\n"
"<ul type=\"circle\" style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">AOI:   At the &quot;GetCoverage&quot; tab the AOI values will subset the delivered Coverages to the limits provided by the AOI. The coordinate values to be supplied depend on the setting provided in the &quot;Type of Subsetting&quot; section. See below.        </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Type of Subsetting:   These settings influence the coordinate values of the AOI. The default setting is &quot;Original&quot;, i.e. the coordinate values have to correspond to the CRS of the offered Coverages. The list of server supported CRSs (which is gathered during the &quot;Connect to Server&quot; initialisation process) is provided via the the &quot;Output CRS&quot; selection button. However, the &quot;Original&quot; CRS (which corresponds to the CRS of the offered Coverage) is only gathered during a <span style=\" font-style:italic;\">DescribeCoverage</span> or a <span style=\" font-style:italic;\">DescribeEOCoverageSet</span> request. Thereafter the &quot;Output CRS&quot; selection button will be set to show the &quot;Original CRS&quot; as an indication. I.e. if you don\'t issue a <span style=\" font-style:italic;\">DescribeEOCoverageSet</span> request you have to know by yourself (e.g. by other means) the CRS of the offered/selected Coverage (&quot;Original CRS&quot;).           If you like to provide the coordinates of the AOI in a different CRS you can select the &quot;CRS&quot; radio button and provide the desired EPSG-Code in the designated &quot;EPSG-No.&quot; field (e.g. this method can be used if you don\'t know the &quot;Original CRS&quot;).  If want to provide pixel coordinates you can select the &quot;Pixel&quot; radio button and provide the AOI in pixel coordinates.<br /> (Note: Not all servers will respect the later two options, so you might get a server error here. See also the Hint - Erroneous behaviour section of this manual for additional information).        </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">List of Band Numbers:   Here you may provide a comma-separated list of the desired bands (and their order). The delivered Coverages will be subsetted to contain only the provided bands in the provided order.        </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Interpolation:   The method of interpolation applied during subsetting and especially for resizing of the delivered Coverages. Here either the values provided in the Caopabilities document are set or some default values are provided (nearest, bilinear, average). (Note: Not all possibilities might be supported by all WCS servers. The defaults have been chosen on the MapServer\'s capabilities).        </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Output Format:   You may choose one of the supported &quot;Output Formats&quot; (file formats) in which the Coverages shall be delivered. The listing of the server side supported &quot;Output Formats&quot; is gathered during the &quot;Connect to Server&quot; initialisation process.        </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Output CRS:   Independent of the original CRS, you may choose to reproject the delivered Coverages to another CRS offered by the WCS server. The list of offered CRS\'s is provided as a selection button. The listing of server side offered CRS\'s is gathered during the &quot;Connect to Server&quot; initialisation process. As soon as a <span style=\" font-style:italic;\">DescribeCoverage</span> or a <span style=\" font-style:italic;\">DescribeEOCoverageSet</span> request has been issue the value shown correspond to the &quot;Original&quot; CRS of the Coverages.        </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Output Size:   This section allows you to resize/rescale the delivered Coverages, independently of the AOI. You may choose either to provide absolute sizes for the &quot;x-&quot; and the &quot;y-dimension&quot; (pixel/line numbers) of the resulting Coverage or you provide the desired resolution (dimension of a pixel according to &quot;Output CRS&quot;) for each of the axis. In either case you may need to run a <span style=\" font-style:italic;\">DescribeCoverage</span> or a <span style=\" font-style:italic;\">DescribeEOCoverageSet</span> request first, in order to gather the correct &quot;Axis-Labels&quot; (if you know them already you may skip this step and provide the &quot;Axis-Labels&quot; manually). To return to the original outsize select the respective &quot;Original Outsize&quot; radio button.        </li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\"><br />    </span></p>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Once you have set all desired \'Output Parameters\', select the &quot;GetCoverage&quot; button to start the download.     </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This may take some time (according to the number of selected Coverages and their requested size). Please be patient.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The Coverages will be downloaded and stored in the provided location sequentially and will concurrently be shown in the QGis Layers list. (Note: currently all coverages available in the provided location will be loaded and shown).</li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a name=\"Hint\"></a><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:medium; font-weight:600;\">H</span><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:medium; font-weight:600;\">int - Erroneous behaviour</span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">In case you encounter an error (except server errors) or other strange behaviour, please close the QgsWcsClient2 plugin, restart QGis, activate the \'Python Console\' from within QGis (Menu: Plugins -&gt; Python Console), reload the QgsWcsClient2 plugin and repeat your previous actions. (Note: in case you have the \'Plugin Reloader\' plugin installed you just need to close the  QgsWcsClient2 plugin, open the \'Python Console\' and reload the QgsWcsClient2 plugin, before repeating your previous actions).    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">You should then get some additional information about the requests sent and error encountered. Please include this output in an error report to us.    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This output also shows the requests sent to the servers. Please copy these requests and try them in a regular browser and check if they work there and also check the error messages returned from the server, before sending error reports.     </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">In most cases problems will be due to server errors e.g. an optional parameter is not supported. Unfortunately some servers do not indicate this directly but just issue a general server error. So please try the request with differernt parameter settings before sending error reports.</li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a name=\"Quick How To\"></a><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:medium; font-weight:600;\">Q</span><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:medium; font-weight:600;\">uick How To:</span></p>\n"
"<ol style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Select a WCS server from the &quot;Server&quot; list and press the &quot;Connect to Server&quot; button    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Provide a &quot;Local Storage Path&quot; where downloaded Coverages shall be stored    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Switch to the &quot;GetCapabiltites&quot; tab and press the &quot;GetCapabilties&quot; button    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Select one or more CoveragesIDs and/or DataSeriesIDs of interest    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If Coverages have been selected, switch to the &quot;DescribeCoverage&quot; tab    </li>\n"
"<ol type=\"a\" style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Issue a DescribeCoverage request        </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">check the returned DescribeCoverage result and close it        </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">switch to the &quot;GetCapabilities&quot; tab        </li></ol>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If DatasetSeries have ben selected, switch to the &quot;DescribeEOCoverageSet&quot; tab    </li>\n"
"<ol type=\"a\" style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Provide an AOI and maybe a TOI to which the search for DatasetSeries shall be limited (don\'t turn off the &quot;Coverage IDs only&quot; check-box!)        </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Select one or more CoveragesIDs and/or DataSeriesIDs of interest        </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Press the &quot;DescribeEOCoverageSet&quot; button        </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The returned results will be automatically shown in the &quot;GetCoverage&quot; tab        </li></ol>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Optional:    Provide an AOI to which the Coverages shall be subsetted (pay attention to the &quot;Type of Subsetting&quot;; see the \'How To\' for details). You may also provide a comma-separated list of &quot;Bands&quot; considering their order    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Check for the desired &quot;Output Format&quot; and the &quot;Output CRS&quot; !     </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Press &quot;GetCoverage&quot; button to start the download    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The Coverages will be downloaded and stored in the provided location (&quot;Local Storage Path&quot;) sequentially and will concurrently be shown in the QGis Layers list. (Note: currently all coverages available in the provided location will be loaded and shown).    </li>\n"
"<li style=\" font-family:\'arial,helvetica,sans-serif\';\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Please be patient. This may take some time (according to the number of selected Coverages and their requested size)</li></ol>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a name=\"Other Stuff\"></a><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:medium; font-weight:600;\">O</span><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:medium; font-weight:600;\">ther Stuff:</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:4px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:small; font-weight:600;\">About</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\">General Information about:   Author / Company / Contact / Copyright / Acknowledgements / License.<br />Please see the separate &quot;About&quot; tab.</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\"> </span></p></body></html>", None))
        self.tabWidget_EOWcsClient2.setTabText(self.tabWidget_EOWcsClient2.indexOf(self.tab_Help), _translate("QgsWcsClient2", "Help", None))
        self.btnClose_About.setText(_translate("QgsWcsClient2", "Close", None))
        self.textEdit_2.setHtml(_translate("QgsWcsClient2", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:18px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:xx-large; font-weight:600;\">QgsWcsClient2</span></p>\n"
"<p style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-size:x-large; font-weight:600;\">A OGC WCS 2.0/EO-WCS Client</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-weight:600;\">Author:</span><span style=\" font-family:\'arial,helvetica,sans-serif\';\">   Christian Schiller</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-weight:600;\">Company:</span><span style=\" font-family:\'arial,helvetica,sans-serif\';\">   </span><a href=\"http://www.eox.at\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-weight:600; text-decoration: underline; color:#0000ff;\">EOX IT Services GmbH</span></a><span style=\" font-family:\'arial,helvetica,sans-serif\';\">, Vienna, Austria,</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-weight:600;\">Contact:</span><span style=\" font-family:\'arial,helvetica,sans-serif\';\">   christian dot schiller at eox dot at</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-weight:600;\">Acknowledgements:</span><span style=\" font-family:\'arial,helvetica,sans-serif\';\">   The development of this QgsWcsClient2 plugin (a OGC WCS 2.0/EO-WCS Client) was partially financed by ESA (European Space Agency) under the ESA-GSTP DREAM/Delta-Dream project (991/C03-YC)</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\'; font-weight:600;\">License: </span><span style=\" font-family:\'arial,helvetica,sans-serif\';\">    The MIT License (MIT)</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\">Copyright (c) 2014 EOX IT Services GmbH</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\">Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\">The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'arial,helvetica,sans-serif\';\"> </span></p></body></html>", None))
        self.tabWidget_EOWcsClient2.setTabText(self.tabWidget_EOWcsClient2.indexOf(self.tab_About), _translate("QgsWcsClient2", "About", None))

